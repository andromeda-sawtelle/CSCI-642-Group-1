@MISC{ACMCODE,
  author = 	 {{Association for Computing Machinery}},
  title = 	 {{ACM Code of Ethics and Professional Conduct}},
  note =         {\url{https://www.acm.org/code-of-ethics}},
  year = 	 {2018},
  howpublished = 	 {ACM, New York}
}

@INPROCEEDINGS{Monniaux:Memory,
	AUTHOR = {Monniaux, David},
	TITLE = {Memory Simulations, Security and Optimization in a Verified Compiler},
	BOOKTITLE = {Proceedings of the 13th ACM SIGPLAN International Conference on Certified Programs and Proofs},
	PAGES = {103–117},
	ORGANIZATION = {Association for Computing Machinery},
	PUBLISHER = {Association for Computing Machinery},
	ADDRESS = {London, UK},
	MONTH = "August",
	YEAR = {2024}	}
	
@INPROCEEDINGS{Xu:Silent,
	AUTHOR = {Jianhao Xu and Kangjie Lu and Zhengjie Du and Zhu Ding and Linke Li and Qiushi Wu and Mathias Payer and Bing Mao},
	TITLE = {Silent Bugs Matter: A Study of {Compiler-Introduced} Security Bugs},
	BOOKTITLE = {32nd USENIX Security Symposium (USENIX Security 23)},
	PAGES = {3655-3672},
	ORGANIZATION = "USENIX Security",
	PUBLISHER = {USENIX Security},
	ADDRESS = {Anaheim, CA},
	MONTH = "August", 
	YEAR = {2023}	}
	
@inproceedings{Li:Finding,
author = {Li, Shaohua and Su, Zhendong},
title = {Finding Unstable Code via Compiler-Driven Differential Testing},
year = {2023},
isbn = {9781450399180},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3582016.3582053},
doi = {10.1145/3582016.3582053},
abstract = {Unstable code refers to code that has inconsistent or unstable run-time semantics due to undefined behavior (UB) in the program. Compilers exploit UB by assuming that UB never occurs, which allows them to generate efficient but potentially semantically inconsistent binaries. Practitioners have put great research and engineering effort into designing dynamic tools such as sanitizers for frequently occurring UBs. However, it remains a big challenge how to detect UBs that are beyond the reach of current techniques. In this paper, we introduce compiler-driven differential testing (CompDiff), a simple yet effective approach for finding unstable code in C/C++ programs. CompDiff relies on the fact that when compiling unstable code, different compiler implementations may produce semantically inconsistent binaries. Our main approach is to examine the outputs of different binaries on the same input. Discrepancies in outputs may signify the existence of unstable code. To detect unstable code in real-world programs, we also integrate CompDiff into AFL++, the most widely-used and actively-maintained general-purpose fuzzer. Despite its simplicity, CompDiff is effective in practice: on the Juliet benchmark programs, CompDiff uniquely detected 1,409 bugs compared to sanitizers; on 23 popular open-source C/C++ projects, CompDiff-AFL++ uncovered 78 new bugs, 52 of which have been fixed by developers and 36 cannot be detected by sanitizers. Our evaluation also reveals the fact that CompDiff is not designed to replace current UB detectors but to complement them.},
booktitle = {Proceedings of the 28th ACM International Conference on Architectural Support for Programming Languages and Operating Systems, Volume 3},
pages = {238–251},
numpages = {14},
keywords = {compiler, undefined behavior, unstable code},
location = {Vancouver, BC, Canada},
series = {ASPLOS 2023}
}

@INPROCEEDINGS{Wang:Optimization,
	AUTHOR = {Wang, Xi and Zeldovich, Nickolai and Kaashoek, M. Frans and Solar-Lezama, Armando},
	TITLE = {Towards optimization-safe systems: analyzing the impact of undefined behavior},
	BOOKTITLE = {Proceedings of the Twenty-Fourth ACM Symposium on Operating Systems Principles},
	PAGES = {260–275},
	ORGANIZATION = "Association for Computing Machinery",
	PUBLISHER = {Association for Computing Machinery},
	ADDRESS = {New York, NY},
	YEAR = {2013}	}

@INPROCEEDINGS{DSilva:Correctness,
	AUTHOR = {D'Silva, Vijay and Payer, Mathias and Song, Dawn},
	TITLE = {The Correctness-Security Gap in Compiler Optimization},
	BOOKTITLE = {2015 IEEE Security and Privacy Workshops},
	PAGES = {73-87},
	ORGANIZATION = {IEEE},
	PUBLISHER = {IEEE},
	ADDRESS = {New York, NY},
	MONTH = "May", 
	YEAR = {2015}	}

@misc{CWE:2023, url={https://cwe.mitre.org/top25/archive/2023/2023_top25_list.html},
	author={CWE}, journal={CWE}, publisher={Department of Homeland Security}, year={2023}} 



